# Generated by Django 5.1.1 on 2024-09-29 21:31

import account.models
import core.utils.image_path
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('inventory', '0001_initial'),
        ('world', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=64, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='Username')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, help_text='Required. 50 characters or fewer. Example: john.doe@gmail.com', max_length=254, unique=True, verbose_name='Email Address')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_confirmed', models.BooleanField(default=True, verbose_name='Confirmed')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff User')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Superuser')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('last_confirm_email_request', models.DateTimeField(blank=True, null=True)),
                ('last_password_reset_request', models.DateTimeField(blank=True, null=True)),
                ('is_customer', models.BooleanField(default=False, verbose_name='Customer')),
                ('is_manager', models.BooleanField(default=False, verbose_name='Manager')),
                ('is_employee', models.BooleanField(default=False, verbose_name='Employee')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('address_name', models.CharField(help_text='Ex: Home', max_length=64, verbose_name='Address Name')),
                ('first_name', models.CharField(max_length=64, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=64, verbose_name='Last Name')),
                ('company_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Company Name')),
                ('phone', account.models.PossiblePhoneNumberField(blank=True, db_index=True, default='', max_length=128, region=None, verbose_name='Phone')),
                ('street_address_1', models.CharField(blank=True, max_length=256, verbose_name='Street Address 1')),
                ('street_address_2', models.CharField(blank=True, max_length=256, verbose_name='Street Address 2')),
                ('city', models.CharField(blank=True, help_text='Los Angeles', max_length=256, verbose_name='City')),
                ('city_area', models.CharField(blank=True, help_text='California', max_length=128, verbose_name='City Area')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='Postal Code')),
                ('country_area', models.CharField(blank=True, max_length=128)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='country_addresses', to='world.country', verbose_name='Country')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='CustomerUser',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='customer_profile', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('first_name', models.CharField(blank=True, max_length=64, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=64, verbose_name='Last Name')),
                ('phone', account.models.PossiblePhoneNumberField(blank=True, default='', max_length=128, region=None, verbose_name='Phone')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('default_billing_address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='account.address', verbose_name='Default Billing Address')),
                ('default_shipping_address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='account.address', verbose_name='Default Shipping Address')),
            ],
        ),
        migrations.AddField(
            model_name='address',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_addresses', to='account.customeruser', verbose_name='Customer'),
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('first_name', models.CharField(max_length=32, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=32, verbose_name='Last Name')),
                ('number', models.CharField(max_length=8, verbose_name='Number')),
                ('identification_number', models.CharField(blank=True, max_length=11, null=True, unique=True, verbose_name='Identification Number')),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True, verbose_name='Phone')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birthdate')),
                ('portrait', models.FileField(blank=True, null=True, upload_to=core.utils.image_path.upload_person_portrait, verbose_name='Portrait')),
                ('credentials', models.FileField(blank=True, null=True, upload_to=core.utils.image_path.upload_person_credentials, verbose_name='Credentials')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('warehouse', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manager', to='inventory.warehouse', verbose_name='Warehouse')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('first_name', models.CharField(max_length=32, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=32, verbose_name='Last Name')),
                ('number', models.CharField(max_length=8, verbose_name='Number')),
                ('identification_number', models.CharField(blank=True, max_length=11, null=True, unique=True, verbose_name='Identification Number')),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True, verbose_name='Phone')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birthdate')),
                ('portrait', models.FileField(blank=True, null=True, upload_to=core.utils.image_path.upload_person_portrait, verbose_name='Portrait')),
                ('credentials', models.FileField(blank=True, null=True, upload_to=core.utils.image_path.upload_person_credentials, verbose_name='Credentials')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('position', models.CharField(default='Warehouse Attendant', max_length=64, verbose_name='Position')),
                ('warehouse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wh_employees', to='inventory.warehouse', verbose_name='Warehouse')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mn_employees', to='account.manager', verbose_name='Manager')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
